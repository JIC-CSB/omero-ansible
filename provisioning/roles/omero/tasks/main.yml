---

# Download and install OMERO.

###################################################################
# Install OMERO server dependencies.
###################################################################

- name: install other packages
  yum:
    name: [ libdb-utils, expat-devel, java-11-openjdk ]

###################################################################
# Create and configure the omero admin user.
###################################################################

- name: create the omero group
  group:
    name: "{{ omero_user_group }}"
    state: present

- name: create the omero admin user
  user:
    name: "{{ omero_admin_user }}"
    group: "{{ omero_user_group }}"
    uid: "{{ omero_admin_uid }}"
    password: "{{ omero_admin_password }}"

- name: create grid directory
  file:
    path: "{{ python_venv }}/lib64/etc/grid"
    owner: "{{ omero_admin_user }}"
    group: "{{ omero_user_group }}"
    state: directory
    mode: 0775

- name: create omero home directory
  file:
    path: "{{ omero_home }}"
    owner: "{{ omero_admin_user }}"
    group: "{{ omero_user_group }}"
    state: directory
    mode: 0775

- name: add omero bashrc file
  template:
    src: bashrc
    dest: "/home/{{ omero_admin_user }}/.bashrc"
    owner: "{{ omero_admin_user }}"

###################################################################
# Configure the OMERO data directory.
###################################################################

- name: create the actual omero data directory
  file:
    path: "{{ omero_data_dir }}"
    owner: "{{ omero_admin_user }}"
    group: "{{ omero_user_group }}"
    state: directory

- name: create link between actual omero data dir and OMERO dir
  file:
    src: "{{ omero_data_dir }}"
    dest: "/OMERO"
    state: link

- name: ensure that temp directory exists
  file:
    path: "{{ omero_tmpdir }}"
    owner: "{{ omero_admin_user }}"
    group: "{{ omero_user_group }}"
    state: directory
    mode: 0770

###################################################################
# Download, install and configure the OMERO server.
###################################################################

- name: download and decompress the omero tarball
  unarchive:
    src: "http://downloads.openmicroscopy.org/omero/{{ omero_version }}/artifacts/OMERO.server-{{ omero_version }}-{{ ice_version }}-{{ omero_branch }}.zip"
    remote_src: yes
    dest: "{{ omero_home }}"
    owner: "{{ omero_admin_user }}"
    group: "{{ omero_user_group }}"
    creates: "{{ omero_home }}/OMERO.server-{{ omero_version }}-{{ ice_version }}-{{ omero_branch }}/LICENSE.txt"

- name: make a symbolic link to the omero server directory
  become: yes
  become_user: "{{ omero_admin_user }}"
  file:
    src: "{{ omero_home }}/OMERO.server-{{ omero_version }}-{{ ice_version }}-{{ omero_branch }}"
    dest: "{{ omero_dir }}"
    state: link

###################################################################
# Setup OMERO.py
###################################################################

- name: create directory for virtualenv
  become: yes
  become_user: "{{ omero_admin_user }}"
  file:
    dest: "{{ python_venv }}"
    state: directory
    owner: "{{ omero_admin_user }}"
    group: "{{ omero_user_group }}"

- name: install python packages using pip
  become: yes
  become_user: "{{ omero_admin_user }}"
  pip:
    name: [ setuptools, numexpr, tables, Pillow ]
    virtualenv: "{{ python_venv }}"
    virtualenv_command: "{{ python3_exec }} -m venv"

- name: install ICE Python modules
  become: yes
  become_user: "{{ omero_admin_user }}"
  pip:
    name: "https://github.com/ome/zeroc-ice-py-centos7/releases/download/0.2.1/zeroc_ice-3.6.5-cp36-cp36m-linux_x86_64.whl"
    virtualenv: "{{ python_venv }}"
    virtualenv_command: "{{ python3_exec }} -m venv"

- name: install OMERO.py
  become: yes
  become_user: "{{ omero_admin_user }}"
  pip:
    name: omero-py>=5.8.0
    virtualenv: "{{ python_venv }}"
    virtualenv_command: "{{ python3_exec }} -m venv"

- name: configure the omero database connection settings
  become: yes
  become_user: "{{ omero_admin_user }}"
  command: "{{ omero_cmd }} config set {{ item.key }} {{ item.value }}"
  with_items:
    - { key: 'omero.data.dir', value: '{{ omero_data_dir }}' }
    - { key: 'omero.db.name', value: '{{ omero_db_name }}' }
    - { key: 'omero.db.user', value: '{{ omero_db_user }}' }
    - { key: 'omero.db.pass', value: '{{ omero_db_pass }}' }
  environment:
    OMERODIR: "{{ omero_dir }}"

- name: open up the omero specific ports
  lineinfile:
    dest: /etc/ferm/ferm.conf
    line: 'proto tcp dport (4063 4064) ACCEPT;'
    insertafter: '# Ansible specified rules.'
  notify: run ferm

###################################################################
# Configure the postgres database.
###################################################################

- name: create the omero postgres database
  become: yes
  become_user: postgres
  postgresql_db:
    name: "{{ omero_db_name }}" 
    state: present
  register: created_omero_database

- name: create the omero postgres user
  become: yes
  become_user: postgres
  postgresql_user:
    db: "{{ omero_db_name }}"
    name: "{{ omero_db_user }}"
    password: "{{ omero_db_pass }}"
    role_attr_flags: "NOSUPERUSER,CREATEDB"

- name: create omero sql script
  become: yes
  become_user: "{{ omero_admin_user }}"
  command: "{{ omero_cmd }} db script --password {{ omero_root_password }} --version {{ omero_schema_version }} --patch {{ omero_schema_patch }} --file {{ omero_dir }}/etc/omero.properties -f {{ omero_dir }}/{{ omero_schema_sql }}"
  args:
    creates: "{{ omero_home }}/{{ omero_schema_sql }}"
  environment:
    OMERODIR: "{{ omero_dir }}"

- name: create omero schema
  become: yes
  become_user: "{{ omero_admin_user }}"
  shell: "PGPASSWORD={{ omero_db_pass }} psql -w -h localhost -U {{ omero_db_user }} {{ omero_db_name }} < {{ omero_dir }}/{{ omero_schema_sql }}"

###################################################################
# Configure /etc/hosts file with FQDN hostname.
###################################################################

- name: update /etc/hosts with FQDN hostname
  lineinfile: dest=/etc/hosts regexp="^({{ item }}\s*)(localhost.*)$" line="\1{{ ansible_fqdn }} \2"
              backrefs=yes
              owner=root
              group=root
              mode=0644
              backup=true
  with_items:
     - '127\.0\.0\.1'
     - '::1'

###################################################################
# Set logs to be written to mounted disk
###################################################################

- name: remove OMERO's default var/log directory
  file:
    path: "{{ omero_home }}/{{ omero_server_link }}/var/log"
    state: absent

- name: create var/log directory on data mount if it doesn't exist
  file:
    path: "{{ omero_data_dir }}/{{ inventory_hostname }}/OMERO/var_log"
    state: directory
    owner: "{{ omero_admin_user }}"

- name: create link to data mount for OMERO's var/log
  file:
    src: "{{ omero_data_dir }}/{{ inventory_hostname }}/OMERO/var_log"
    dest: "{{ omero_home }}/{{ omero_server_link }}/var/log"
    owner: "{{ omero_admin_user }}"
    state: link

###################################################################
# Set up omero-admin to run as a systemd service
###################################################################

- name: create omero-admin service file
  template:
    src: omero-admin.service
    dest: /etc/systemd/system
    mode: 0755

- name: start omero-admin service
  systemd:
    name: omero-admin
    daemon_reload: yes
    enabled: yes
    state: started
