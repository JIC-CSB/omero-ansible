---

# Download and install OMERO.


###################################################################
# Install OMERO server dependencies.
###################################################################

- name: install other packages
  yum: name=[ libdb-utils, expat-devel, java-1.8.0-openjdk ]

###################################################################
# Create and configure the omero user.
###################################################################

- name: create the omero user
  user:
    name: "{{ omero_user_name }}"
    uid: "{{ omero_uid }}"
    password: "{{ omero_user_password }}"

- name: set permissions of the omero users home directory
  file: path="{{ omero_home }}"
        mode=755
        state=directory

- name: add omero bashrc file
  template: src=bashrc
            dest="{{ omero_home }}/.bashrc"
            owner="{{ omero_user_name }}"

###################################################################
# Configure the OMERO data directory.
###################################################################

- name: create the actual omero data directory
  file: path="{{ omero_data_dir }}"
        owner="{{ omero_user_name }}"
        state=directory

- name: create link between actual omero data dir and OMERO dir
  file: src="{{ omero_data_dir }}"
        dest=/OMERO
        state=link

- name: ensure that temp directory exists
  file:
    path: "{{ omero_tmpdir }}"
    state: directory

###################################################################
# Download, install and configure the OMERO server.
###################################################################

- name: download and decompress the omero tarball
  unarchive:
    src: "http://downloads.openmicroscopy.org/omero/{{ omero_version }}/artifacts/OMERO.server-{{ omero_version }}-{{ ice_version }}-{{ omero_branch }}.zip"
    remote_src: yes
    dest: "{{ omero_home }}"
    owner: "{{ omero_user_name }}"
    group: "{{ omero_user_name }}"
    creates: "{{ omero_home }}/OMERO.server-{{ omero_version }}-{{ ice_version }}-{{ omero_branch }}/LICENSE.txt"

- name: make a symbolic link to the omero server directory
  become: yes
  become_user: "{{ omero_user_name }}"
  file:
    src: "{{ omero_home }}/OMERO.server-{{ omero_version }}-{{ ice_version }}-{{ omero_branch }}"
    dest: "{{ omero_home }}/{{ omero_server_link }}"
    state: link

- name: install OMERO prerequisite software
  become: yes
  become_user: root
  pip:
    requirements: "{{ omero_home }}/{{ omero_server_link }}/share/web/requirements-py27.txt"
    extra_args: --upgrade

- name: configure the omero database
  become: yes
  become_user: "{{ omero_user_name }}"
  command: "{{ omero_cmd }} config set {{ item.key }} {{ item.value }}"
  with_items:
    - { key: 'omero.db.name', value: '{{ omero_db_name }}' }
    - { key: 'omero.db.user', value: '{{ omero_db_user }}' }
    - { key: 'omero.db.pass', value: '{{ omero_db_pass }}' }

- name: open up the omero specific ports
  lineinfile:
    dest: /etc/ferm/ferm.conf
    line: 'proto tcp dport (4063 4064) ACCEPT;'
    insertafter: '# Ansible specified rules.'
  notify: run ferm

###################################################################
# Configure the postgres database.
###################################################################

- name: create the omero postgres user
  become: yes
  become_user: postgres
  postgresql_user:
    name: "{{ omero_db_user }}"
    password: "{{ omero_db_pass }}"
    role_attr_flags: "NOSUPERUSER,NOCREATEDB,NOCREATEROLE"

- name: create the omero postgres database
  become: yes
  become_user: postgres
  postgresql_db:
    name: "{{ omero_db_name }}" 
    owner: "{{ omero_db_user }}"
  register: created_omero_database

- name: create omero sql script
  become: yes
  become_user: "{{ omero_user_name }}"
  command: "{{ omero_cmd }} db script --password {{ omero_root_password  }}"
  args:
    creates: "{{ omero_home }}/{{ omero_schema_sql }}"

- name: create omero schema
  become: yes
  become_user: "{{ omero_user_name }}"
  shell: "PGPASSWORD={{ omero_db_pass }} psql -w -h localhost -U {{ omero_db_user }} {{ omero_db_name }} < {{ omero_home }}/{{ omero_schema_sql }}"
  when: created_omero_database|changed

###################################################################
# Configure the OMERO web server.
###################################################################

- name: configure the omero web application server
  become: yes
  become_user: "{{ omero_user_name }}"
  command: "{{ omero_cmd }} config set omero.web.application_server wsgi-tcp"

- name: create symlinks for static media files
  become: yes
  become_user: "{{ omero_user_name }}"
  command: "{{ omero_cmd }} web syncmedia"

# Use shell instead of command to allow the piping of the output.
- name: create the nginx configuration file
  become: yes
  become_user: "{{ omero_user_name }}"
  shell: "{{ omero_cmd }} web config nginx --http 80 --servername {{ inventory_hostname }} > {{ omero_home }}/omero.conf"

- name: put nginx config file in nginx config area
  become: yes
  copy:
    src: "{{ omero_home }}/omero.conf"
    dest: /etc/nginx/conf.d/
    remote_src: yes
  notify: restart nginx

###################################################################
# Configure /etc/hosts file with FQDN hostname.
###################################################################

- name: update /etc/hosts with FQDN hostname
  lineinfile: dest=/etc/hosts regexp="^({{ item }}\s*)(localhost.*)$" line="\1{{ ansible_fqdn }} \2"
              backrefs=yes
              owner=root
              group=root
              mode=0644
              backup=true
  with_items:
     - '127\.0\.0\.1'
     - '::1'

###################################################################
# Set logs to be written to mounted disk
###################################################################

- name: remove OMERO's default var/log directory
  file:
    path: "{{ omero_home }}/{{ omero_server_link }}/var/log"
    state: absent

- name: create var/log directory on data mount if it doesn't exist
  file:
    path: "{{ omero_data_dir }}/{{ inventory_hostname }}/OMERO/var_log"
    state: directory
    owner: "{{ omero_user_name }}"

- name: create link to data mount for OMERO's var/log
  file:
    src: "{{ omero_data_dir }}/{{ inventory_hostname }}/OMERO/var_log"
    dest: "{{ omero_home }}/{{ omero_server_link }}/var/log"
    owner: "{{ omero_user_name }}"
    state: link

###################################################################
# Set up omero-admin and omero-web to run as systemd services
###################################################################

- name: create omero-admin service file
  copy:
    src: omero-admin.service
    dest: /etc/systemd/system

- name: create omero-web service file
  copy:
    src: omero-web.service
    dest: /etc/systemd/system

- name: start omero-admin service
  systemd:
    name: omero-admin
    daemon_reload: yes
    enabled: yes
    state: started

- name: start omero-web service
  systemd:
    name: omero-web
    daemon_reload: yes
    enabled: yes
    state: started
