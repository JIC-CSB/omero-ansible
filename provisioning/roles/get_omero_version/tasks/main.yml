---
# Get the tarball of OMERO.server that matches {{ omero_version }}

- name: download and unpackage the omero tarball
  unarchive:
    src: "http://downloads.openmicroscopy.org/omero/{{ omero_version }}/artifacts/OMERO.server-{{ omero_version }}-{{ ice_version }}-{{ omero_branch }}.zip"
    remote_src: yes
    dest: "{{ omero_home }}"
    owner: "{{ omero_user_name }}"
    group: "{{ omero_user_name }}"
    creates: "{{ omero_home }}/OMERO.server-{{ omero_version }}-{{ ice_version }}-{{ omero_branch }}/LICENSE.txt"

- name: make a symbolic link to the omero server directory
  become: yes
  become_user: "{{ omero_user_name }}"
  file:
    src: "{{ omero_home }}/OMERO.server-{{ omero_version }}-{{ ice_version }}-{{ omero_branch }}"
    dest: "{{ omero_home }}/{{ omero_server_link }}"
    state: link

- name: check if there are prerequisite python modules
  stat:
    path: "{{ omero_home }}/{{ omero_server_link }}{{ python_requirements }}"
  register: has_prequisites
  when: python_requirements is defined

- name: install OMERO prerequisite software
  become: yes
  become_user: root
  pip:
    requirements: "{{ omero_home }}/{{ omero_server_link }}{{ python_requirements }}"
    executable: "{{ pip_executable | default('/usr/bin/pip') }}"
  when: (has_prequisites) and (pip_executable is defined)"

# Configure the web server

- name: configure the omero web application server
  become: yes
  become_user: "{{ omero_user_name }}"
  command: "{{ omero_cmd }} config set omero.web.application_server wsgi-tcp"

- name: create symlinks for static media files
  become: yes
  become_user: "{{ omero_user_name }}"
  command: "{{ omero_cmd }} web syncmedia"

# Install Django.

- name: check for any django requirements file
  stat:
    src: "{{ django_requirements }}"
  when: django_requirements is defined
  register: django_required

- name: install django
  pip:
    requirements: "{{ omero_home }}/{{ omero_server_link }}/share/web/requirements-py27-nginx.txt"
  when: django_required
